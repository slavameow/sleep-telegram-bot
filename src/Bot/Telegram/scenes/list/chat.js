import Database from '../../../../lib/DB/index.js';
import { logger } from '../../../../logger.js';
import { format } from '@gramio/format';

import { Markup, Scenes } from 'telegraf';
import { Mistral } from '@mistralai/mistralai';

const mistral = new Mistral({
	apiKey: Database.config.telegram.ai.token,
});

const cancel = Markup.button.callback('üè† –û—Ç–º–µ–Ω–∞', 'cancel');
const keyboard = Markup.inlineKeyboard([cancel]);

const Chat = new Scenes.BaseScene('chat');

// prettier-ignore
Chat.enter(async (context) => {
    await context.reply(format`
        üí§ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º-–ø—Å–∏—Ö–æ–ª–æ–≥–æ–º —Å–Ω–∞!</b>\n
        –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ —Å–Ω–µ: –∫–∞–∫ —É—Å–Ω—É—Ç—å, –∫–æ–≥–¥–∞ –ª–æ–∂–∏—Ç—å—Å—è, –∫–∞–∫ –≤—ã—Å—ã–ø–∞—Ç—å—Å—è –∏ –≤—Å—ë, —á—Ç–æ —Ç–µ–±—è –≤–æ–ª–Ω—É–µ—Ç.\n
        –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª ‚Äî –Ω–∞–∂–º–∏ "–û—Ç–º–µ–Ω–∞".`,
        { reply_markup: keyboard.reply_markup, parse_mode: 'HTML', disable_notification: true }
    );
});

const cooldown = new Map();

Chat.on('message', async (context) => {
	const userId = context.from.id;

	const now = Date.now();
	const time = 8000;

	const lastTime = cooldown.get(userId);

	if (lastTime && now - lastTime < time) {
		const secondsLeft = Math.ceil((time - (now - lastTime)) / 1000);

		// prettier-ignore
		return context.reply(`‚è≥ –ü–æ–¥–æ–∂–¥–∏ ${secondsLeft} —Å–µ–∫. –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º.`);
	}

	const text = context.message.text;

	if (!text) {
		return context.reply(`üéØ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ —Å–Ω–µ.`);
	}

	cooldown.set(userId, now);

	// prettier-ignore
	try {
		const message = await context.reply('üí≠ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...');

		const answer = await generateAnswer(text);
		cooldown.set(userId, now);
		await context.deleteMessage(message.message_id);

		await context.reply(MarkdownV2(bold(answer)), { 
			reply_markup: keyboard.reply_markup,
			parse_mode: 'MarkdownV2' 
		});
	} catch (error) {
		logger.error(error);
		return context.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`);
	}
});

Chat.action('cancel', async (context) => {
	await context.editMessageText('üç™ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.');
	return context.scene.leave();
});
function bold(text) {
	return text.replace(/\*\*(.+?)\*\*/g, '*$1*');
}

function MarkdownV2(text) {
	return text.replace(/[_\[\]()~`>#+=|{}.!\\-]/g, '\\$&');
}

async function generateAnswer(text) {
	const response = await mistral.chat.complete({
		model: 'mistral-small-latest',
		temperature: 0.9,
		top_p: 0.95,
		messages: [
			{
				role: 'system',
				content: `
–¢—ã ‚Äî –±–æ—Ç-–ø—Å–∏—Ö–æ–ª–æ–≥ —Å–Ω–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º –Ω–∞–ª–∞–¥–∏—Ç—å —Å–æ–Ω: –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –∑–∞—Å—ã–ø–∞–Ω–∏—é, –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—é, —Ü–∏–∫–ª–∞–º —Å–Ω–∞, —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—é, –≤—ã—Å—ã–ø–∞–Ω–∏—é –∏ –≤—Å–µ–º, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å–æ —Å–Ω–æ–º.

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —è–≤–Ω–æ —Å–≤—è–∑–∞–Ω —Å–æ —Å–Ω–æ–º, –¥–∞–π –ø–æ–ª–µ–∑–Ω—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç.

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–µ—è—Å–Ω—ã–π –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–π, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–Ω—è—Ç—å, —Å–≤—è–∑–∞–Ω –ª–∏ –æ–Ω —Å —Ç–µ–º–æ–π —Å–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–æ–≥–∞–¥–∫–∏.

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç ¬´–¥–∞¬ª, ¬´—É–≥—É¬ª, ¬´–∫–æ–Ω–µ—á–Ω–æ¬ª, ¬´–∞–≥–∞¬ª –∏–ª–∏ –¥—Ä—É–≥–∏–º –∫–æ—Ä–æ—Ç–∫–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º, —Å—á–∏—Ç–∞–π —ç—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —Ç–æ–≥–æ, —á—Ç–æ –µ–≥–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ —Å–Ω–µ, –∏ —Å—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–π –ø–æ —Ç–µ–º–µ ‚Äî **–Ω–µ –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–π**.

–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —Å–≤—è–∑–∞–Ω –ª–∏ –≤–æ–ø—Ä–æ—Å —Å–æ —Å–Ω–æ–º, –≤–µ–∂–ª–∏–≤–æ –ø–æ–ø—Ä–æ—Å–∏ —É—Ç–æ—á–Ω–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–ú–æ–∂–µ—à—å —É—Ç–æ—á–Ω–∏—Ç—å, —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Å–Ω–∞?¬ª

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫–æ —Å–Ω—É, –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –∏ —Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ —Å–Ω–æ–º.

–û—Ç–≤–µ—á–∞–π –ø–æ —Å—É—â–µ—Å—Ç–≤—É, —Ç–µ–ø–ª–æ –∏ –∫—Ä–∞—Ç–∫–æ. –ò–∑–±–µ–≥–∞–π –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ—Å–ø—Ä–æ—Å–æ–≤.

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤, –æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫–æ —Å–Ω—É:  
‚Ä¢ ¬´–í–æ —Å–∫–æ–ª—å–∫–æ –ª—É—á—à–µ –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å?¬ª  
‚Ä¢ ¬´–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –±–µ—Å—Å–æ–Ω–Ω–∏—Ü–µ–π?¬ª  
‚Ä¢ ¬´–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å?¬ª  
‚Ä¢ ¬´–ü–æ—á–µ–º—É —è –ø—Ä–æ—Å—ã–ø–∞—é—Å—å –Ω–æ—á—å—é?¬ª  
‚Ä¢ ¬´–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞?¬ª  
‚Ä¢ ¬´–ú–æ–∂–Ω–æ –ª–∏ –ø–∏—Ç—å –∫–æ—Ñ–µ –≤–µ—á–µ—Ä–æ–º?¬ª  
‚Ä¢ ¬´–ü–æ–º–æ–≥–∞—é—Ç –ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —É—Å–Ω—É—Ç—å?¬ª

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–µ –æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫–æ —Å–Ω—É:  
‚Ä¢ ¬´–ß—Ç–æ –ø–æ–µ—à—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫?¬ª  
‚Ä¢ ¬´–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞?¬ª  
‚Ä¢ ¬´–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç.¬ª  
‚Ä¢ ¬´–í–æ —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ñ—É—Ç–±–æ–ª?¬ª  
‚Ä¢ ¬´–ö–∞–∫–∞—è —É —Ç–µ–±—è –ª—é–±–∏–º–∞—è –µ–¥–∞?¬ª
 `.trim(),
			},
			{
				role: 'user',
				content: text,
			},
		],
	});

	console.log(response.choices[0].message);

	return response.choices[0].message.content;
}

export default Chat;
